{"version":3,"sources":["utils/alert.js","Components/SearchBar.js","Components/WeatherIcon.js","Components/WeatherTemp.js","Components/WeatherWindSpeed.js","Components/WeatherDetails.js","Components/WeatherSummary.js","utils/util.js","Components/WeatherForecast.js","Components/App.js","reportWebVitals.js","index.js"],"names":["hideAlert","el","document","querySelector","parentElement","removeChild","showAlert","type","msg","markup","insertAdjacentHTML","window","setTimeout","regexUnicode","SearchBar","props","state","location","errors","errorClass","handleSubmit","bind","handleChange","validateForm","e","preventDefault","this","onSubmit","setState","target","name","value","length","test","valid","Object","values","forEach","val","className","noValidate","htmlFor","id","placeholder","onChange","icon","faSearch","React","Component","WeatherIcon","weatherIcon","src","alt","WeatherTemp","temp","units","Math","round","propTypes","PropTypes","number","isRequired","oneOf","WeatherWindSpeed","windSpeed","WeatherDetails","dayOfWeek","weatherCondition","currentTemp","highTemp","lowTemp","precipitation","humidity","convertTempUnits","onClick","onKeyDown","role","String","fromCharCode","defaultProps","WeatherSummary","activeClass","getCoordinates","a","apiUrl","process","axios","get","res","status","data","results","locations","latLng","console","log","getLocation","lat","lon","adminArea5","getWeatherData","unixToDateTime","unix","Date","dateTimeFormat","language","options","format","Intl","DateTimeFormat","WeatherForecast","forecast","getIndexFromComp","clickedIndex","currentTarget","parentNode","children","indexOf","slice","map","prop","key","weekday","dt","weather","max","min","App","isLoading","error","index","tempUnit","getNewWeatherData","successGeo","pos","coords","latitude","longitude","navigator","geolocation","getCurrentPosition","err","message","prevProps","prevState","newLocation","lng","textContent","childrenArr","ind","classList","remove","testIndex","renderedContent","current","daily","description","day","pop","wind_speed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.71e33f6b.chunk.js","sourcesContent":["export const hideAlert = () => {\n  const el = document.querySelector('.alert');\n  if (el) el.parentElement.removeChild(el);\n};\n\nexport const showAlert = (type, msg) => {\n  hideAlert();\n  const markup = `<div class=\"alert alert--${type}\">${msg}</div>`;\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\n  window.setTimeout(hideAlert, 10000);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst regexUnicode = /^[a-zA-Z\\u0080-\\u024F]+(?:([ \\-']|(\\. ))[a-zA-Z\\u0080-\\u024F]+)*$/;\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: '',\n      errors: {\n        location: '',\n      },\n      errorClass: '',\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const { location, errors } = this.state;\n    const { onSubmit } = this.props;\n\n    if (this.validateForm(errors)) {\n      onSubmit(location);\n    } else {\n      this.setState({\n        errors: {\n          location: 'Invalid search!',\n        },\n        errorClass: 'error',\n      });\n    }\n    this.setState({ location: '' });\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    const { name, value } = e.target;\n    const { errors } = this.state;\n    let { errorClass } = this.state;\n\n    errors.location =\n      value.length < 3 ? 'Must be a minimum of 3 characters.' : '';\n    errors.location =\n      value.length > 91 ? 'Must be less than 90 characters.' : '';\n    errors.location = !regexUnicode.test(value) ? 'Must be a valid city.' : '';\n    errorClass = errors.location.length > 0 ? 'error' : '';\n\n    this.setState({ [name]: value, errors, errorClass });\n  }\n\n  validateForm(errors) {\n    let valid = true;\n    Object.values(errors).forEach((val) => {\n      if (val.length > 0) valid = false;\n    });\n    return valid;\n  }\n\n  render() {\n    const { location, errors, errorClass } = this.state;\n\n    return (\n      <div className=\"search-bar\">\n        <form className=\"form\" onSubmit={this.handleSubmit} noValidate>\n          <div className=\"form__group-wrapper\">\n            <div className=\"form__group\">\n              <label htmlFor=\"searchInput\">\n                <input\n                  type=\"text\"\n                  name=\"location\"\n                  className={`form__input input-text ${errorClass}`}\n                  id=\"searchInput\"\n                  value={location}\n                  placeholder=\"City Name\"\n                  onChange={this.handleChange}\n                  noValidate\n                />\n                <span className=\"form__label label-text\">\n                  {errors.location.length > 0\n                    ? errors.location\n                    : 'Winter is coming...'}\n                </span>\n              </label>\n            </div>\n\n            <div className=\"form__group\">\n              <button className=\"btn\" type=\"submit\">\n                <FontAwesomeIcon icon={faSearch} className=\"btn-icon\" />\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst WeatherIcon = ({ weatherIcon }) => (\n  <img\n    src={`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`}\n    alt=\"Weather icon\"\n  />\n);\n\nWeatherIcon.propTypes = { weatherIcon: PropTypes.string.isRequired };\n\nexport default WeatherIcon;\n","import PropTypes from 'prop-types';\n\nconst WeatherTemp = ({ temp, units }) =>\n  units === 'metric' ? Math.round((temp - 32) / 1.8) : temp;\n\nWeatherTemp.propTypes = {\n  temp: PropTypes.number.isRequired,\n  units: PropTypes.oneOf(['imperial', 'metric']).isRequired,\n};\n\nexport default WeatherTemp;\n","import PropTypes from 'prop-types';\n\nconst WeatherWindSpeed = ({ windSpeed, units }) =>\n  units === 'metric'\n    ? `${Math.round((windSpeed / 2.237) * 3.6)} km/h`\n    : `${windSpeed} mph`;\n\nWeatherWindSpeed.propTypes = {\n  windSpeed: PropTypes.number.isRequired,\n  units: PropTypes.oneOf(['imperial', 'metric']).isRequired,\n};\n\nexport default WeatherWindSpeed;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport WeatherIcon from './WeatherIcon';\nimport WeatherTemp from './WeatherTemp';\nimport WeatherWindSpeed from './WeatherWindSpeed';\n\nconst WeatherDetails = ({\n  location,\n  dayOfWeek,\n  weatherCondition,\n  icon,\n  units,\n  currentTemp,\n  highTemp,\n  lowTemp,\n  precipitation,\n  humidity,\n  windSpeed,\n  convertTempUnits,\n}) => (\n  <div className=\"weather-details-wrapper\">\n    <div className=\"weather-details\">\n      <div className=\"weather-details__header\">\n        <div className=\"weather-details__header-location heading-primary\">\n          {location}\n        </div>\n\n        <div className=\"weather-details__header-day paragraph\">{dayOfWeek}</div>\n\n        <div className=\"weather-details__header-weather paragraph\">\n          {weatherCondition}\n        </div>\n      </div>\n      <div className=\"weather-details__condition\">\n        <div className=\"weather-details__condition--primary\">\n          <div className=\"weather-details__condition-icon\">\n            <WeatherIcon weatherIcon={icon} />\n          </div>\n\n          <div className=\"weather-details__condition-temp\">\n            <span className=\"weather-details__condition-temp-value heading-secondary\">\n              <WeatherTemp temp={currentTemp} units={units} />\n            </span>\n\n            <div className=\"weather-details__condition-temp-unit book-size\">\n              <span\n                className=\"active\"\n                onClick={convertTempUnits}\n                onKeyDown={convertTempUnits}\n                role=\"presentation\"\n              >\n                F\n              </span>\n              &nbsp; | &nbsp;\n              <span\n                onClick={convertTempUnits}\n                onKeyDown={convertTempUnits}\n                role=\"presentation\"\n              >\n                C\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"weather-details__condition--secondary paragraph\">\n          <div className=\"weather-details__condition-hightemp\">\n            High:&nbsp;\n            <WeatherTemp temp={highTemp} units={units} />\n            &deg;\n          </div>\n\n          <div className=\"weather-details__condition-lowtemp\">\n            Low:&nbsp;\n            <WeatherTemp temp={lowTemp} units={units} />\n            &deg;\n          </div>\n\n          <div className=\"weather-details__condition-precipitation\">\n            {`Precipitation: ${precipitation + String.fromCharCode(37)}`}\n          </div>\n\n          <div className=\"weather-details__condition-humidity\">\n            {`Humidity: ${humidity + String.fromCharCode(37)}`}\n          </div>\n\n          <div className=\"weather-details__condition-windspeed\">\n            Wind:&nbsp;\n            <WeatherWindSpeed windSpeed={windSpeed} units={units} />\n            {/* {`Wind: ${windSpeed} mph`} */}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nWeatherDetails.propTypes = {\n  location: PropTypes.string.isRequired,\n  dayOfWeek: PropTypes.string.isRequired,\n  weatherCondition: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  units: PropTypes.oneOf(['imperial', 'metric']),\n  currentTemp: PropTypes.number,\n  highTemp: PropTypes.number.isRequired,\n  lowTemp: PropTypes.number.isRequired,\n  precipitation: PropTypes.number.isRequired,\n  humidity: PropTypes.number.isRequired,\n  windSpeed: PropTypes.number.isRequired,\n  convertTempUnits: PropTypes.func.isRequired,\n};\n\nWeatherDetails.defaultProps = {\n  units: 'imperial',\n  currentTemp: 55,\n};\n\nexport default WeatherDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport WeatherIcon from './WeatherIcon';\nimport WeatherTemp from './WeatherTemp';\n\nconst WeatherSummary = ({\n  dayOfWeek,\n  icon,\n  highTemp,\n  lowTemp,\n  onClick,\n  activeClass,\n  units,\n}) => (\n  // <div className=\"weather-summary-wrapper\">\n  <div\n    className={`weather-summary ${activeClass}`}\n    onClick={onClick}\n    onKeyDown={onClick}\n    role=\"presentation\"\n  >\n    <div className=\"weather-summary__day paragraph\">{dayOfWeek}</div>\n\n    <div className=\"weather-summary__icon\">\n      <WeatherIcon weatherIcon={icon} />\n    </div>\n\n    <div className=\"weather-summary__temp paragraph\">\n      <div className=\"weather-summary__temp-high\">\n        <WeatherTemp temp={highTemp} units={units} />\n      </div>\n\n      <div className=\"weather-summary__temp-low\">\n        <WeatherTemp temp={lowTemp} units={units} />\n      </div>\n    </div>\n  </div>\n  // </div>\n);\n\nWeatherSummary.propTypes = {\n  dayOfWeek: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  highTemp: PropTypes.number.isRequired,\n  lowTemp: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  activeClass: PropTypes.string,\n  units: PropTypes.oneOf(['imperial', 'metric']),\n};\n\nWeatherSummary.defaultProps = {\n  activeClass: '',\n  units: 'imperial',\n};\n\nexport default WeatherSummary;\n","import axios from 'axios';\n// import { showAlert } from './alert';\n\n// API\nexport const getCoordinates = async (location) => {\n  try {\n    const apiUrl = `http://www.mapquestapi.com/geocoding/v1/address?key=${process.env.REACT_APP_MAPQUEST_API}&location=${location}`;\n    const res = await axios.get(apiUrl);\n    if (res.status === 200) return res.data.results[0].locations[0].latLng;\n  } catch (err) {\n    console.log(err);\n    // showAlert('error', 'There was an error getting the coordinates.');\n  }\n};\n\nexport const getLocation = async (lat, lon) => {\n  try {\n    const apiUrl = `http://www.mapquestapi.com/geocoding/v1/reverse?key=${process.env.REACT_APP_MAPQUEST_API}&location=${lat},${lon}`;\n    const res = await axios.get(apiUrl);\n    if (res.status === 200) return res.data.results[0].locations[0].adminArea5;\n  } catch (err) {\n    console.log(err);\n    // showAlert('error', 'There was an error getting the location.');\n  }\n};\n\nexport const getWeatherData = async (lat, lon) => {\n  try {\n    const apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&appid=${process.env.REACT_APP_OPENWEATHER_API}&units=imperial`;\n    const res = await axios.get(apiUrl);\n    if (res.status === 200) return res.data;\n  } catch (err) {\n    console.log(err);\n    // showAlert('error', 'There was an error getting the weather.');\n  }\n};\n\n// DATETIME\nexport const unixToDateTime = (unix) => new Date(unix * 1000);\n\nexport const dateTimeFormat = (language, options, format) =>\n  new Intl.DateTimeFormat(language, options).format(format);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport WeatherSummary from './WeatherSummary';\n\nimport { unixToDateTime, dateTimeFormat } from '../utils/util';\n\nconst WeatherForecast = ({\n  forecast,\n  getIndexFromComp,\n  activeClass,\n  units,\n}) => {\n  const onClick = (e) => {\n    const clickedIndex = [...e.currentTarget.parentNode.children].indexOf(\n      e.currentTarget\n    );\n    getIndexFromComp(clickedIndex);\n  };\n\n  return (\n    <div className=\"weather-forecast-wrapper\">\n      {forecast.slice(0, 5).map((prop, key) => (\n        <WeatherSummary\n          key={prop.dt}\n          dayOfWeek={dateTimeFormat(\n            'en-US',\n            { weekday: 'short' },\n            unixToDateTime(prop.dt)\n          )}\n          icon={prop.weather[0].icon}\n          highTemp={Math.round(prop.temp.max)}\n          lowTemp={Math.round(prop.temp.min)}\n          onClick={onClick}\n          activeClass={activeClass(key)}\n          units={units}\n        />\n      ))}\n    </div>\n  );\n};\n\nWeatherForecast.propTypes = {\n  forecast: PropTypes.arrayOf(PropTypes.object).isRequired,\n  getIndexFromComp: PropTypes.func.isRequired,\n  activeClass: PropTypes.func.isRequired,\n  units: PropTypes.oneOf(['imperial', 'metric']).isRequired,\n};\n\nexport default WeatherForecast;\n","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport { showAlert } from '../utils/alert';\n\nimport SearchBar from './SearchBar';\nimport WeatherDetails from './WeatherDetails';\nimport WeatherForecast from './WeatherForecast';\n\nimport {\n  getCoordinates,\n  getLocation,\n  getWeatherData,\n  unixToDateTime,\n  dateTimeFormat,\n} from '../utils/util';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // -- UI/API LOADING/ERROR\n      isLoading: true,\n      error: null,\n      // -- API\n      weather: null,\n      location: null,\n      // newLocation: null,\n      // -- INDEX TO UPDATE WEATHER DETAILS,\n      // INCLUDING CLICKED COMPONENT,\n      // STARTING W/DEFAULT OF 0 (CURRENT DAY)\n      index: 0,\n      // -- TEMP UNIT IN 'imperial'/'metric' W/DEFAULT 'imperial'\n      tempUnit: 'imperial',\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getNewWeatherData = this.getNewWeatherData.bind(this);\n    this.getIndexFromComp = this.getIndexFromComp.bind(this);\n    this.convertTempUnits = this.convertTempUnits.bind(this);\n    this.activeClass = this.activeClass.bind(this);\n  }\n\n  componentDidMount() {\n    const successGeo = async (pos) => {\n      try {\n        const { latitude, longitude } = pos.coords;\n        const weather = await getWeatherData(latitude, longitude);\n        const location = await getLocation(latitude, longitude);\n        this.setState({\n          weather,\n          location,\n          isLoading: false,\n        });\n      } catch (err) {\n        this.setState({\n          error:\n            'There was an error getting the weather. Try again or contact the system admin.',\n          isLoading: false,\n        });\n      }\n    };\n    const errorGeo = (err) => {\n      console.log(err.message);\n      this.setState({\n        error: `An error has occured. Try again or contact the system admin. Status code: ${err.status}`,\n        isLoading: false,\n      });\n    };\n    navigator.geolocation.getCurrentPosition(successGeo, errorGeo);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { location } = this.state;\n    if (prevState.location !== location) this.getNewWeatherData(location);\n  }\n\n  onSubmit(newLocation) {\n    this.setState({ location: newLocation });\n  }\n\n  async getNewWeatherData(location) {\n    try {\n      const { lat, lng } = await getCoordinates(location);\n      const weather = await getWeatherData(lat, lng);\n      this.setState({\n        weather,\n      });\n    } catch (err) {\n      // this.setState({ error: err.message });\n      showAlert(\n        'error',\n        'There was an error getting the weather or coordinates. Try again or contact the system admin.'\n      );\n    }\n  }\n\n  getIndexFromComp(index) {\n    this.setState({ index: index });\n  }\n\n  convertTempUnits(e) {\n    const { textContent } = e.target;\n    this.setState({ tempUnit: textContent === 'C' ? 'metric' : 'imperial' });\n    const childrenArr = [...e.target.parentNode.children];\n    const clickedIndex = childrenArr.indexOf(e.target);\n    childrenArr.forEach((val, ind) => {\n      if (ind !== clickedIndex) val.classList.remove('active');\n    });\n    e.target.className = 'active';\n  }\n\n  activeClass(testIndex) {\n    const { index } = this.state;\n    return index === testIndex ? 'active' : '';\n  }\n\n  render() {\n    const { isLoading, error, weather, location, index, tempUnit } = this.state;\n\n    const renderedContent = error ? (\n      <div className=\"paragraph error\">{error}</div>\n    ) : (\n      weather && (\n        // <div className=\"weather-wrapper\">\n        <>\n          <SearchBar onSubmit={this.onSubmit} />\n          <WeatherDetails\n            location={location}\n            dayOfWeek={dateTimeFormat(\n              'en-US',\n              { weekday: 'long' },\n              unixToDateTime(\n                index === 0 ? weather.current.dt : weather.daily[index].dt\n              )\n            )}\n            weatherCondition={\n              index === 0\n                ? weather.current.weather[0].description\n                : weather.daily[index].weather[0].description\n            }\n            icon={\n              index === 0\n                ? weather.current.weather[0].icon\n                : weather.daily[index].weather[0].icon\n            }\n            currentTemp={Math.round(\n              index === 0 ? weather.current.temp : weather.daily[index].temp.day\n            )}\n            highTemp={Math.round(\n              index === 0\n                ? weather.daily[0].temp.max\n                : weather.daily[index].temp.max\n            )}\n            lowTemp={Math.round(\n              index === 0\n                ? weather.daily[0].temp.min\n                : weather.daily[index].temp.min\n            )}\n            precipitation={\n              index === 0\n                ? Math.round(weather.daily[0].pop * 100)\n                : Math.round(weather.daily[index].pop * 100)\n            }\n            humidity={\n              index === 0\n                ? weather.current.humidity\n                : weather.daily[index].humidity\n            }\n            windSpeed={Math.round(\n              index === 0\n                ? weather.current.wind_speed\n                : weather.daily[index].wind_speed\n            )}\n            convertTempUnits={this.convertTempUnits}\n            units={tempUnit}\n          />\n\n          <WeatherForecast\n            forecast={weather.daily}\n            getIndexFromComp={this.getIndexFromComp}\n            activeClass={this.activeClass}\n            units={tempUnit}\n          />\n        </>\n      )\n    );\n\n    return (\n      <main>\n        <div className=\"weather-wrapper\">\n          {isLoading ? (\n            <div className=\"heading-secondary\">Loading...</div>\n          ) : (\n            renderedContent\n          )}\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import '../public/css/style.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}